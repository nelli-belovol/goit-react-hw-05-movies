{"version":3,"sources":["views/MoviesPage.jsx"],"names":["api","FetchMovies","MoviesPage","useState","movies","setMovies","value","setValue","setMoviesToState","query","a","searchMovies","dataMovies","onSubmit","e","preventDefault","onChange","target","type","autoComplete","autoFocus","placeholder","map","movie","to","id","title","name"],"mappings":"wPAGMA,EAAM,IAAIC,IAED,SAASC,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAMMC,EAAgB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACEV,EAAIW,aAAaF,GADnB,OACjBG,EADiB,OAEvBP,EAAUO,GAFa,2CAAH,sDAWtB,OACE,qCACE,uBAAMC,SARiB,SAAAC,GACzBA,EAAEC,iBACFP,EAAiBF,GACjBC,EAAS,KAKP,UACE,uBACED,MAAOA,EACPU,SApBS,SAAAF,GACfP,EAASO,EAAEG,OAAOX,QAoBZY,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,wBAAQH,KAAK,SAAb,+CAEF,6BACGd,GACCA,EAAOkB,KAAI,SAAAC,GACT,OACE,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SACGF,EAAMG,MAAQH,EAAMG,MAAQH,EAAMI,QAF9BJ,EAAME","file":"static/js/5.547b875e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FetchMovies from 'api/movies';\r\nconst api = new FetchMovies();\r\n\r\nexport default function MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const setMoviesToState = async query => {\r\n    const dataMovies = await api.searchMovies(query);\r\n    setMovies(dataMovies);\r\n  };\r\n\r\n  const handleSearchSubmit = e => {\r\n    e.preventDefault();\r\n    setMoviesToState(value);\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSearchSubmit}>\r\n        <input\r\n          value={value}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n        />\r\n\r\n        <button type=\"submit\">Поиск</button>\r\n      </form>\r\n      <ul>\r\n        {movies &&\r\n          movies.map(movie => {\r\n            return (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>\r\n                  {movie.title ? movie.title : movie.name}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}